[{"/Applications/work/study/react/hooks-demo/src/index.js":"1","/Applications/work/study/react/hooks-demo/src/reportWebVitals.js":"2","/Applications/work/study/react/hooks-demo/src/Demo.js":"3","/Applications/work/study/react/hooks-demo/src/components/form/form.js":"4","/Applications/work/study/react/hooks-demo/src/components/form/timestampToTotime.js":"5","/Applications/work/study/react/hooks-demo/src/components/usecontext/father.js":"6","/Applications/work/study/react/hooks-demo/src/components/usecontext/createContext.js":"7","/Applications/work/study/react/hooks-demo/src/App.js":"8","/Applications/work/study/react/hooks-demo/src/Hooks/useBoolean.ts":"9","/Applications/work/study/react/hooks-demo/src/Hooks/useInterval.ts":"10"},{"size":505,"mtime":1627899249237,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607092025245,"results":"13","hashOfConfig":"12"},{"size":3422,"mtime":1623994857977,"results":"14","hashOfConfig":"15"},{"size":2225,"mtime":1623996285665,"results":"16","hashOfConfig":"15"},{"size":731,"mtime":1623982949986,"results":"17","hashOfConfig":"15"},{"size":425,"mtime":1624335728162,"results":"18","hashOfConfig":"15"},{"size":104,"mtime":1624335702693,"results":"19","hashOfConfig":"15"},{"size":611,"mtime":1627957585970,"results":"20","hashOfConfig":"12"},{"size":452,"mtime":1627956898929,"results":"21","hashOfConfig":"12"},{"size":1284,"mtime":1627900528983,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"12y5q51",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"51ajoj",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Applications/work/study/react/hooks-demo/src/index.js",[],["49","50"],"/Applications/work/study/react/hooks-demo/src/reportWebVitals.js",[],"/Applications/work/study/react/hooks-demo/src/Demo.js",["51","52"],"import React, { useState, useRef } from 'react';\nimport { Button } from 'antd';\nimport Form from './components/form/form.js';\nimport { timestampToTime } from './components/form/timestampToTotime';\n\nconst FormComp = () => {\n  let [isRequired, setRequired] = useState(true);\n\n  const config = {\n    columns: [\n      {\n        name: 'userName',\n        label: '用户名',\n        rules: [{ required: true, message: '请输入用户名' }],\n      },\n      {\n        name: 'password',\n        label: '密码',\n        type: 'password',\n        rules: [{ required: true, message: '请输入密码' }],\n      },\n      {\n        name: 'confirmPwd',\n        label: '确认密码',\n        type: 'password',\n        rules: [\n          { required: true, message: '请再一次输入密码' },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              //如果value为空，!value为true则直接返回Promise.resolve()就会提示“请再一次输入密码”\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject('两次密码输入不一致');\n            },\n          }),\n        ],\n      },\n      {\n        name: 'email',\n        label: '邮箱',\n        rules: [\n          { required: true, message: '请输入邮箱' },\n          {\n            validator: (_, value) => {\n              let reg =\n                /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\n              if (!value || reg.test(value)) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject('邮箱格式不正确');\n            },\n          },\n        ],\n      },\n      {\n        name: 'gender',\n        label: '性别',\n        type: 'select',\n        rules: [{ required: true, message: '请选择性别' }],\n        list: [\n          { value: 'male', label: '男' },\n          { value: 'female', label: '女' },\n        ],\n        callback: (res) => onGenderChange(res),\n      },\n      {\n        name: 'highHeeled',\n        label: '高跟鞋',\n        rules: [{ required: isRequired, message: '请输入喜欢的高跟鞋' }],\n      },\n      {\n        name: 'exercise',\n        label: '运动',\n        rules: [{ required: true, message: '请输入喜欢的运动' }],\n      },\n      {\n        name: 'date',\n        label: '日期',\n        type: 'datePicker',\n        rules: [{ required: true, message: '请输入日期' }],\n      },\n    ],\n    data: {\n      userName: '小坏',\n      gender: 'female',\n    },\n  };\n\n  // 切换性别时会显示隐藏高跟鞋的正则校验\n  const onGenderChange = (value) => {\n    switch (value) {\n      case 'male':\n        setRequired(false);\n        break;\n      case 'female':\n        setRequired(true);\n        break;\n    }\n  };\n\n  const childRef = useRef();\n  const getFormVal = () => {\n    const form = childRef.current.getForm();\n    // 可以在验证后再获取值\n    form\n      .validateFields()\n      .then((valid) => {\n        valid.date = timestampToTime(valid.date).replace(' ', '');\n        console.log(valid);\n      })\n      .catch((e) => {});\n  };\n\n  return (\n    <div>\n      <Form {...config} cRef={childRef}></Form>\n      <Button type=\"primary\" onClick={getFormVal} style={{ marginLeft: '12%' }}>\n        在组件外部获取form表单的值\n      </Button>\n    </div>\n  );\n};\n\nexport default FormComp;\n",["53","54"],"/Applications/work/study/react/hooks-demo/src/components/form/form.js",["55"],"import React, {createElement, useEffect, useImperativeHandle} from 'react'\nimport ProTypes from 'prop-types'\nimport {Form, Input, Select, DatePicker, Button} from 'antd'\nimport {timestampToTime} from './timestampToTotime.js'\n\nconst FormItem = Form.Item, { Password } = Input, { Option } = Select, h = createElement;\nconst FormComponent = ({columns, data, cRef}) => {\n  const [form] = Form.useForm()\n\n  useImperativeHandle(cRef,() => ({\n    getForm:() => form \n  }))\n\n  const layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 16 },\n  },\n  tailLayout = {\n    wrapperCol: { offset: 4, span: 16 },\n  };\n  // console.log('tailLayout',tailLayout)\n\n  //若有正则验证，则在所有的正则校验都通过后用来获取输入的数据，若没有正则校验，则直接获取输入的数据\n  const onFinish = values => {\n    values.date = timestampToTime(values.date)\n  };\n\n  //重置要配合着const [form] = Form.useForm()以及form={form}\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  //form表单的回显\n  useEffect(() => {\n    form.setFieldsValue(data)\n  }, [])\n\n  const components = {\n    select:({label, list = [], callback = () => {}}) =>h(Select, {placeholder:label, onChange: v => callback(v)}, list.map(c => h(Option, {key: c.value, value: c.value}, c.label))),\n    input: ({label}) => <Input placeholder={label}/>,\n    password: ({label}) => h(Password, {placeholder: label}),\n    datePicker:({label}) => <DatePicker placeholder={label} format=\"YYYY-MM-DD\"></DatePicker>\n  }\n\n  return (\n    <Form {...layout} form={form} onFinish={onFinish}>\n      {\n        columns.map((n,i) => {\n          const {type = 'input'} =n, C = components[type]\n          // console.log(C(n))\n          return <FormItem label={n.label} name={n.name} key={i}>{C(n)}</FormItem>\n        })\n      }\n      {/* 内容是什么？？ */}\n      <FormItem {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '20px'}}>提交</Button>\n        <Button htmlType=\"button\" onClick={onReset}>重置</Button>\n      </FormItem>\n    </Form>\n  )\n}\n\nFormComponent.propTypes = {\n  columns: ProTypes.array.isRequired,\n  data: ProTypes.object,\n  cRef:ProTypes.object\n}\nexport default FormComponent","/Applications/work/study/react/hooks-demo/src/components/form/timestampToTotime.js",[],"/Applications/work/study/react/hooks-demo/src/components/usecontext/father.js",[],["56","57"],"/Applications/work/study/react/hooks-demo/src/components/usecontext/createContext.js",[],"/Applications/work/study/react/hooks-demo/src/App.js",[],"/Applications/work/study/react/hooks-demo/src/Hooks/useBoolean.ts",[],"/Applications/work/study/react/hooks-demo/src/Hooks/useInterval.ts",[],["58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":47,"column":39,"nodeType":"66","messageId":"67","endLine":47,"endColumn":40,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":93,"column":5,"nodeType":"71","messageId":"72","endLine":100,"endColumn":6},{"ruleId":"60","replacedBy":"73"},{"ruleId":"62","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":36,"column":6,"nodeType":"77","endLine":36,"endColumn":8,"suggestions":"78"},{"ruleId":"60","replacedBy":"79"},{"ruleId":"62","replacedBy":"80"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["83","84"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["81"],["82"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'form'. Either include them or remove the dependency array.","ArrayExpression",["85"],["81"],["82"],"no-global-assign","no-unsafe-negation",{"messageId":"86","fix":"87","desc":"88"},{"messageId":"89","fix":"90","desc":"91"},{"desc":"92","fix":"93"},"removeEscape",{"range":"94","text":"95"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"96","text":"97"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [data, form]",{"range":"98","text":"99"},[1328,1329],"",[1328,1328],"\\",[969,971],"[data, form]"]